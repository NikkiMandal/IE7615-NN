


    import matplotlib.pyplot as plt

    # Model 1 evaluation results
    model1_train_accuracy = [0.0520, 0.1043, 0.1291, 0.1467, 0.1576, 0.1677, 0.1774, 0.1854, 0.1930, 0.1980, 0.2044, 0.2120, 0.2180, 0.2229, 0.2296]
    model1_val_accuracy = [0.0582, 0.0753, 0.0846, 0.0962, 0.1076, 0.1060, 0.1146, 0.1240, 0.1257, 0.1301, 0.1316, 0.1325, 0.1352, 0.1426, 0.1419]
    model1_train_loss = [5.0133, 4.5114, 4.3057, 4.1771, 4.0897, 4.0176, 3.9585, 3.9004, 3.8514, 3.8032, 3.7618, 3.7171, 3.6825, 3.6443, 3.6085]
    model1_val_loss = [4.9998, 4.8829, 4.8078, 4.7778, 4.7360, 4.7191, 4.7162, 4.6518, 4.6528, 4.6359, 4.6448, 4.6303, 4.6128, 4.6084, 4.5774]

    # Model 2 evaluation results
    model2_train_accuracy = [0.0388, 0.0975, 0.1251, 0.1413, 0.1516, 0.1605, 0.1656, 0.1730, 0.1764, 0.1815, 0.1848, 0.1873, 0.1915, 0.1922, 0.1946, 0.1950, 0.1991, 0.1988, 0.1992, 0.2017]
    model2_val_accuracy = [0.0848, 0.1284, 0.1541, 0.1663, 0.1760, 0.1788, 0.1993, 0.1919, 0.2047, 0.2024, 0.2116, 0.2122, 0.2146, 0.2207, 0.2241, 0.2199, 0.2222, 0.2178, 0.2155, 0.2272]
    model2_train_loss = [4.8702, 4.3351, 4.1353, 4.0215, 3.9447, 3.8800, 3.8431, 3.8021, 3.7770, 3.7471, 3.7271, 3.7091, 3.6912, 3.6710, 3.6657, 3.6533, 3.6401, 3.6317, 3.6283, 3.6099]
    model2_val_loss = [4.4352, 4.1236, 3.9526, 3.8967, 3.8228, 3.7738, 3.6899, 3.7116, 3.6661, 3.6539, 3.5871, 3.5896, 3.5794, 3.5686, 3.5666, 3.5616, 3.5357, 3.5607, 3.5800, 3.5216]

    # Model 3 evaluation results
    model3_train_accuracy = [0.0810, 0.1401, 0.1682, 0.1932, 0.2133, 0.2291, 0.2433, 0.2500, 0.2666, 0.2721, 0.2809, 0.2882, 0.2950, 0.3115, 0.3115]
    model3_val_accuracy = [0.0736, 0.1447, 0.1377, 0.1665, 0.1768, 0.1809, 0.1933, 0.2056, 0.2270, 0.2183, 0.2430, 0.2167,

    0.2488, 0.2319, 0.2241]
    model3_train_loss = [16.0563, 13.0113, 10.7665, 9.1904, 8.1190, 7.4100, 6.8867, 6.5434, 6.2456, 6.0170, 5.8189, 5.6839, 5.5420, 5.3879, 5.3030]
    model3_val_loss = [14.8511, 11.9626, 10.1522, 8.8576, 7.9441, 7.5075, 7.0660, 6.7270, 6.5451, 6.3235, 6.0971, 6.1186, 5.8263, 5.8562, 5.8274]

    # Model 4 evaluation results
    model4_train_accuracy = [0.0925, 0.1679, 0.2040, 0.2293, 0.2497, 0.2691, 0.2837, 0.2965, 0.3083, 0.3177, 0.3281, 0.3352, 0.3439, 0.3501, 0.3752]
    model4_val_accuracy = [0.1428, 0.1880, 0.2172, 0.2336, 0.2411, 0.2729, 0.2897, 0.2789, 0.3165, 0.3162, 0.3268, 0.3179, 0.3222, 0.3136, 0.3861]
    model4_train_loss = [4.4841, 3.8458, 3.6100, 3.4469, 3.3272, 3.2164, 3.1340, 3.0608, 2.9903, 2.9393, 2.8943, 2.8470, 2.8083, 2.7705, 2.6320]
    model4_val_loss = [4.0456, 3.7457, 3.5470, 3.4703, 3.4317, 3.2221, 3.1518, 3.2354, 3.0533, 3.0135, 2.9755, 3.0113, 2.9791, 3.0720, 2.6813]


    # Evaluation metrics for Model 5
    model5_train_accuracy = [0.2019, 0.3798, 0.4440, 0.4843, 0.5132, 0.5428, 0.5622, 0.5793, 0.6007, 0.6319, 0.6355, 0.6480, 0.6613, 0.6724, 0.6861]
    model5_train_loss = [3.8646, 2.6849, 2.3554, 2.1474, 2.0030, 1.8645, 1.7621, 1.6688, 1.5806, 1.4302, 1.3872, 1.3650, 1.3029, 1.2422, 1.1833]
    model5_val_loss = [3.9683, 3.9822, 4.0264, 4.0683, 4.0897, 4.1634, 4.2040, 4.2672, 4.3736, 4.3285, 4.4362, 4.5639, 4.5966, 4.6669, 4.6875]
    model5_val_accuracy = [0.2410, 0.2801, 0.2886, 0.3082, 0.3121, 0.3224, 0.3183, 0.3305, 0.3287, 0.3357, 0.3382, 0.3297, 0.3414, 0.3342, 0.3373]

    # Plotting Training accuracy vs Epoch
    plt.figure(figsize=(6, 6))
    plt.plot(range(1, 16), model1_train_accuracy, label='Model 1')
    plt.plot(range(1, 21), model2_train_accuracy, label='Model 2')
    plt.plot(range(1, 16), model3_train_accuracy, label='Model 3')
    plt.plot(range(1, 16), model4_train_accuracy, label='Model 4')
    plt.plot(range(1, 16), model5_train_accuracy, label='Model 5')
    plt.xlabel('Epoch')
    plt.ylabel('Training Accuracy')
    plt.title('Training Accuracy vs Epoch')
    plt.legend()
    plt.grid(True)
    plt.show()

    # Plotting Validation accuracy vs Epoch
    plt.figure(figsize=(6, 6))
    plt.plot(range(1, 16), model1_val_accuracy, label='Model 1')
    plt.plot(range(1, 21), model2_val_accuracy, label='Model 2')
    plt.plot(range(1, 16), model3_val_accuracy, label='Model 3')
    plt.plot(range(1, 16), model4_val_accuracy, label='Model 4')
    plt.plot(range(1, 16), model5_val_accuracy, label='Model 5')
    plt.xlabel('Epoch')
    plt.ylabel('Validation Accuracy')
    plt.title('Validation Accuracy vs Epoch')
    plt.legend()
    plt.grid(True)
    plt.show()

    # Plotting Train loss vs Epoch
    plt.figure(figsize=(6, 6))
    plt.plot(range(1, 16), model1_train_loss, label='Model 1')
    plt.plot(range(1, 21), model2_train_loss, label='Model 2')
    plt.plot(range(1, 16), model3_train_loss, label='Model 3')
    plt.plot(range(1, 16), model4_train_loss, label='Model 4')
    plt.plot(range(1, 16), model5_train_loss, label='Model 5')
    plt.xlabel('Epoch')
    plt.ylabel('Train Loss')
    plt.title('Train Loss vs Epoch')
    plt.legend()
    plt.grid(True)
    plt.show()

    # Plotting Val loss vs Epoch
    plt.figure(figsize=(6, 6))
    plt.plot(range(1, 16), model1_val_loss, label='Model 1')
    plt.plot(range(1, 21), model2_val_loss, label='Model 2')
    plt.plot(range(1, 16), model3_val_loss, label='Model 3')
    plt.plot(range(1, 16), model4_val_loss, label='Model 4')
    plt.plot(range(1, 16), model5_val_loss, label='Model 5')
    plt.xlabel('Epoch')
    plt.ylabel('Val Loss')
    plt.title('Val Loss vs Epoch')
    plt.legend()
    plt.grid(True)
    plt.show()

[]

[]

[]

[]
